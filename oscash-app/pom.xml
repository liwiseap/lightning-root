<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>oscash-app</artifactId>
	<packaging>jar</packaging>

	<name>oscash-app</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>com.osc</groupId>
		<artifactId>oscash-root</artifactId>
		<version>1.0.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.7</java.version>
		
		<mysql.version>5.1.42</mysql.version>
		<mapper.version>1.1.0</mapper.version>
		<pagehelper.version>1.1.0</pagehelper.version>
		<mybatis.version>1.3.0</mybatis.version>
		<druid.version>1.1.1</druid.version>
		<fastjson.version>1.2.4</fastjson.version>
		<shiro.version>1.4.0</shiro.version>
		<mybatisplus-spring-boot-starter.version>1.0.4</mybatisplus-spring-boot-starter.version>
		<mybatis-plus.version>2.1.0</mybatis-plus.version>
		<velocity.version>1.7</velocity.version>
		<ehcache.version>3.3.1</ehcache.version>
		<ehcache.core.version>2.6.11</ehcache.core.version>
		<jwt.version>0.7.0</jwt.version>
		<swagger.version>2.6.1</swagger.version>
		<velocity.version>2.0</velocity.version>
	</properties>

	<dependencies>
		<!-- 系统架构内依赖 -->
		<dependency>
			<groupId>com.osc</groupId>
			<artifactId>oscash-entity</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.osc</groupId>
			<artifactId>oscash-dao</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.osc</groupId>
			<artifactId>oscash-service-user</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- <dependency>
			<groupId>com.osc</groupId>
			<artifactId>oscash-common</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.osc</groupId>
			<artifactId>oscash-pojo</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.osc</groupId>
			<artifactId>oscash-utils</artifactId>
			<version>1.0.0</version>
		</dependency> -->
		
        <!--pagehelper-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>
		<!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jwt.version}</version>
		</dependency>
		<!-- 模板引擎 -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
			<version>${velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus</artifactId>
			<version>${mybatis-plus.version}</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatisplus-spring-boot-starter</artifactId>
			<version>${mybatisplus-spring-boot-starter.version}</version>
		</dependency>
		<!--shiro依赖-->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>${ehcache.core.version}</version>
		</dependency>
	</dependencies>
	
	<profiles>
		<!-- 多环境打包配置，使用-P参数指定配置文件。例如打包生产环境：mvn xxx -Pproduct -->
		<profile>
			<!-- 测试环境 -->
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<configuration>
									<tasks>
										<delete dir="${project.build.outputDirectory}/test_config"
											includeemptydirs="true" />
										<delete dir="${project.build.outputDirectory}/prod_config"
											includeemptydirs="true" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- 测试环境 -->
			<id>test</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<configuration>
									<tasks>
										<copy todir="${project.build.outputDirectory}/" overwrite="true">
											<fileset dir="${basedir}/src/main/resources/test_config/" />
										</copy>
										<delete dir="${project.build.outputDirectory}/test_config"
											includeemptydirs="true" />
										<delete dir="${project.build.outputDirectory}/prod_config"
											includeemptydirs="true" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- 生产环境 -->
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<configuration>
									<tasks>
										<copy todir="${project.build.outputDirectory}/" overwrite="true">
											<fileset dir="${basedir}/src/main/resources/prod_config/" />
										</copy>
										<delete dir="${project.build.outputDirectory}/test_config"
											includeemptydirs="true" />
										<delete dir="${project.build.outputDirectory}/prod_config"
											includeemptydirs="true" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
